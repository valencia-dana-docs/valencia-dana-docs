// Valencia DANA Graffiti Archive - Configuration
// Main configuration file for the application

const CONFIG = {
  // Google Maps Configuration
  googleMaps: {
    // API key will be injected by GitHub Actions or set for local development
    apiKey: window.GOOGLE_MAPS_API_KEY || 'YOUR_GOOGLE_MAPS_API_KEY_HERE',
    
    // Valencia city center coordinates
    center: { 
      lat: 39.4699, 
      lng: -0.3763 
    },
    
    // Default zoom level (12 = city view)
    zoom: 12,
    
    // Custom map styles (optional)
    styles: [
      {
        featureType: 'poi',
        elementType: 'labels',
        stylers: [{ visibility: 'on' }]
      },
      {
        featureType: 'transit',
        elementType: 'labels',
        stylers: [{ visibility: 'on' }]
      }
    ]
  },
  
  // Instagram Integration
  instagram: {
    // Replace with your Instagram username
    username: 'valencia_dana_docs',
    
    // Will be constructed automatically, or provide custom URL
    url: 'https://instagram.com/valencia_dana_docs'
  },
  
  // User Interface Configuration
  ui: {
    // Main site title
    title: 'Archivo Graffitis DANA Valencia',
    
    // Subtitle displayed in header
    subtitle: 'Documentando la memoria histórica post-29O',
    
    // Loading messages
    loadingMessages: [
      'Inicializando archivo histórico...',
      'Cargando memoria ciudadana...',
      'Preparando documentación visual...',
      'Conectando con el mapa de Valencia...',
      'Finalizando carga del proyecto...'
    ]
  },
  
  // Data Configuration
  data: {
    // Path to images JSON file (generated by GitHub Actions)
    imagesPath: 'data/images.json',
    
    // Maximum number of markers to display at once
    maxMarkers: 1000,
    
    // Enable marker clustering for performance
    enableClustering: true,
    
    // Cluster threshold (number of markers before clustering)
    clusterThreshold: 20
  },
  
  // Application Features
  features: {
    // Enable fullscreen mode
    fullscreen: true,
    
    // Show loading screen
    showLoading: true,
    
    // Enable keyboard shortcuts
    keyboardShortcuts: true,
    
    // Show map controls
    mapControls: true,
    
    // Show statistics in header
    showStats: true,
    
    // Enable modal dialogs
    modals: true
  },
  
  // Contact Information
  contact: {
    email: 'contact@valencia-dana-docs.org',
    
    // GitHub repository URL
    github: 'https://github.com/your-username/valencia-dana-docs',
    
    // Project website (optional)
    website: 'https://your-username.github.io/valencia-dana-docs'
  },
  
  // SEO and Meta Information
  meta: {
    description: 'Documentación histórica de graffitis post-DANA Valencia del 29 de octubre 2024. Mapa interactivo con archivo fotográfico ciudadano.',
    
    keywords: 'Valencia, DANA, graffiti, memoria histórica, 29 octubre 2024, documentación ciudadana',
    
    author: 'Valencia DANA Documentation Project',
    
    // Open Graph image URL (for social sharing)
    ogImage: 'https://your-domain.github.io/valencia-dana-docs/assets/og-image.jpg'
  },
  
  // Performance Configuration
  performance: {
    // Lazy load images in info windows
    lazyLoading: true,
    
    // Image loading timeout in milliseconds
    imageTimeout: 10000,
    
    // Debounce delay for map events (ms)
    mapDebounce: 100,
    
    // Maximum concurrent image loads
    maxConcurrentLoads: 5
  },
  
  // Accessibility Settings
  accessibility: {
    // High contrast mode support
    highContrast: true,
    
    // Reduced motion support
    reducedMotion: true,
    
    // Keyboard navigation
    keyboardNav: true,
    
    // Screen reader announcements
    announcements: true
  },
  
  // Development Configuration
  development: {
    // Enable debug mode
    debug: false,
    
    // Show console logs
    verbose: false,
    
    // Mock data for testing (when images.json not available)
    mockData: false,
    
    // Enable development tools
    devTools: false
  },
  
  // Version and Build Information
  version: '1.0.0',
  buildDate: new Date().toISOString(),
  
  // Supported languages (for future internationalization)
  languages: ['es', 'en', 'ca'],
  defaultLanguage: 'es'
};

// Validation function to check required configuration
CONFIG.validate = function() {
  const errors = [];
  
  // Check Google Maps API key
  if (!this.googleMaps.apiKey || this.googleMaps.apiKey === 'YOUR_GOOGLE_MAPS_API_KEY_HERE') {
    errors.push('Google Maps API key is required');
  }
  
  // Check coordinates
  if (!this.googleMaps.center || typeof this.googleMaps.center.lat !== 'number' || typeof this.googleMaps.center.lng !== 'number') {
    errors.push('Valid Google Maps center coordinates are required');
  }
  
  // Check Instagram configuration
  if (!this.instagram.username) {
    console.warn('Instagram username not configured');
  }
  
  // Return validation results
  return {
    isValid: errors.length === 0,
    errors: errors
  };
};

// Helper function to get configuration value with fallback
CONFIG.get = function(path, fallback = null) {
  const keys = path.split('.');
  let value = this;
  
  for (const key of keys) {
    if (value && typeof value === 'object' && key in value) {
      value = value[key];
    } else {
      return fallback;
    }
  }
  
  return value;
};

// Initialize configuration on load
if (typeof window !== 'undefined') {
  // Browser environment
  window.CONFIG = CONFIG;
  
  // Validate configuration and show warnings
  const validation = CONFIG.validate();
  if (!validation.isValid) {
    console.warn('⚠️ Configuration errors found:', validation.errors);
  }
  
  // Set up development mode
  if (CONFIG.development.debug) {
    console.log('🔧 Debug mode enabled');
    window.CONFIG_DEBUG = true;
  }
} else if (typeof module !== 'undefined' && module.exports) {
  // Node.js environment
  module.exports = CONFIG;
}

// Export for ES6 modules
if (typeof exports !== 'undefined') {
  exports.CONFIG = CONFIG;
}